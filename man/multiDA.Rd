% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiDA.R, R/plot.multiDA.R,
%   R/predict.multiDA.R
\name{multiDA}
\alias{multiDA}
\alias{plot.multiDA}
\alias{predict.multiDA}
\title{multiDA}
\usage{
multiDA(vy, mX, penalty = c("AIC", "BIC", "GIC-2", "GIC-3", "GIC-4", "GIC-5",
  "GIC-6", "Chi-Sq"), pen.options = NULL, equal.var = TRUE,
  set.options = c("exhaustive", "onevsrest", "onevsall", "ordinal", "user"),
  MAXGROUPS = NULL, sUser = NULL)

\method{plot}{multiDA}(x, ranks = 1:10, save.plot = FALSE)

\method{predict}{multiDA}(object, newdata, ...)
}
\arguments{
\item{vy}{vector of class values (for training)}

\item{mX}{matrix containing the training data. The rows are the sample observations, and the columns are the features.}

\item{penalty}{choice of penalty for use in training. Options include \code{"AIC"}, \code{"BIC"}}

\item{pen.options}{if \code{"user"} is selected for \code{penalty}, pen options....}

\item{equal.var}{a \code{LOGICAL} value, indicating whether group specific variances should be equal or allowed to vary.}

\item{set.options}{options for set partition matrix S.}

\item{x}{trained multiDA object}

\item{ranks}{a vector of which ranked features should be plot}

\item{save.plot}{logical value indicating whether plots should be saved (\code{TRUE}) or plotted on graphics device (\code{FALSE})}

\item{object}{trained multiDA object}

\item{newdata}{matrix of observations to predict. Each row corresponds to a new observation.}
}
\value{
\code{multiDA} object that contains the trained multiDA classifier

plots

list predicted class memberships of each row in newdata
}
\description{
the multiDA function

plot ranked features from a trained multiDA object

multiDA prediction of the class membership of a matrix of new observations.
}
\examples{
#train the multiDA classifier using the SRBCT dataset, and find the resubstitution error rate
data(SRBCT)
vy   <- SRBCT$vy
mX   <- SRBCT$mX
res  <- multiDA(vy, mX, penalty="GIC-4", equal.var=TRUE, set.options="exhaustive")
vals <- predict(res, newdata=mX)$vy.pred          #vy.pred returns class labels
rser <- sum(vals!=vy)/length(vy)
}
